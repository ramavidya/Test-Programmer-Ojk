// <auto-generated />
using System;
using CRUD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRUD.Migrations
{
    [DbContext(typeof(MVCDemoDbContext))]
    partial class MVCDemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRUD.Models.Domain.Dosen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nama")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nama_Dosen");

                    b.Property<string>("Nip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dosen");
                });

            modelBuilder.Entity("CRUD.Models.Domain.Mahasiswa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alamat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("datetime2")
                        .HasColumnName("Tgl_Lhr");

                    b.Property<int>("JenisKelamin")
                        .HasColumnType("int");

                    b.Property<string>("Nama")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nama_Mhs");

                    b.Property<string>("Nim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mahasiswa");
                });

            modelBuilder.Entity("CRUD.Models.Domain.MataKuliah", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KodeMK")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Kode_MK");

                    b.Property<string>("NamaMK")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nama_MK");

                    b.Property<int>("Sks")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MataKuliah");
                });

            modelBuilder.Entity("CRUD.Models.Domain.Perkuliahan", b =>
                {
                    b.Property<Guid>("PerkuliahanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DosenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MahasiswaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MataKuliahId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nilai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PerkuliahanId");

                    b.HasIndex("DosenId");

                    b.HasIndex("MahasiswaId");

                    b.HasIndex("MataKuliahId");

                    b.ToTable("Perkuliahan");
                });

            modelBuilder.Entity("CRUD.Models.Domain.Perkuliahan", b =>
                {
                    b.HasOne("CRUD.Models.Domain.Dosen", "Dosen")
                        .WithMany("Perkuliahan")
                        .HasForeignKey("DosenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRUD.Models.Domain.Mahasiswa", "Mahasiswa")
                        .WithMany("Perkuliahan")
                        .HasForeignKey("MahasiswaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRUD.Models.Domain.MataKuliah", "MataKuliah")
                        .WithMany("Perkuliahan")
                        .HasForeignKey("MataKuliahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosen");

                    b.Navigation("Mahasiswa");

                    b.Navigation("MataKuliah");
                });

            modelBuilder.Entity("CRUD.Models.Domain.Dosen", b =>
                {
                    b.Navigation("Perkuliahan");
                });

            modelBuilder.Entity("CRUD.Models.Domain.Mahasiswa", b =>
                {
                    b.Navigation("Perkuliahan");
                });

            modelBuilder.Entity("CRUD.Models.Domain.MataKuliah", b =>
                {
                    b.Navigation("Perkuliahan");
                });
#pragma warning restore 612, 618
        }
    }
}
